kind: Service
apiVersion: v1
metadata:
  name: rg-server
  labels:
    app: rg-server
spec:
  type: ClusterIP
  selector:
    app: rg-server
  ports:
  - name: grpc
    port: 8080
    targetPort: grpc

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rg-server
  labels:
    app: rg-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rg-server
  template:
    metadata:
      labels:
        app: rg-server
    spec:
      containers:
      - name: rg-server
        image: routeguide
        imagePullPolicy: Never
        command:
        - /rg-server
        envFrom:
        - configMapRef:
            name: rg-server-config
        ports:
        - name: grpc
          containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 5
          exec:
            command:
            - /bin/bash
            - "-c"
            - |
              /grpc_health_probe -addr=:${SERVER_PORT} -service=routeguide.RouteGuide
        livenessProbe:
          initialDelaySeconds: 10
          exec:
            command:
            - /bin/bash
            - "-c"
            - |
              /grpc_health_probe -addr=:${SERVER_PORT} -service=routeguide.RouteGuide

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: rg-server-config
  labels:
    app: rg-server
data:
  SERVER_PORT: "8080"
  FAULT_PERCENT: "0.0"

---
kind: Pod
apiVersion: v1
metadata:
  name: rg-client
  labels:
    app: rg-client
spec:
  restartPolicy: OnFailure
  containers:
  - name: rg-client
    image: routeguide
    imagePullPolicy: Never
    command:
    - /rg-client
    envFrom:
    - configMapRef:
        name: rg-client-config

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: rg-client-config
  labels:
    app: rg-client
data:
  SERVER_HOST: rg-server
  SERVER_PORT: "8080"
  GRPC_TIMEOUT: "20s"
  MODE: repeatn
  MAX_REPEAT: "200"
  REMOTE_API: GetFeature
